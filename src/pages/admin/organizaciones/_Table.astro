---
import { Api, Error } from '~/enums'
import type { CustomError, Organization } from '~/types'
import db from '~/db'
import { organizationTable } from '~/db/schema'
import { handleErrorFromServer } from '~/utils'
import { verifyPermission } from '~/utils/verify-permission'
import DataTable from './_Table'

let data: Organization[] = []
let error: CustomError = null
if (Astro.locals.userTokenError) {
  error = handleErrorFromServer(Astro.locals.userTokenError)
} else {
  const permissionVerification = await verifyPermission(Astro.locals.roleId, Api.ORGANIZATION_ALL)
  if (!permissionVerification.isSuccess) {
    error = handleErrorFromServer(permissionVerification.error)
  } else {
    try {
      data = await db
        .select({
          id: organizationTable.id,
          title: organizationTable.title,
          isActive: organizationTable.isActive,
        })
        .from(organizationTable)
    } catch {
      error = handleErrorFromServer(Error.DB)
    }
  }
}
---

<DataTable client:only="solid-js" data={data} error={error} />
