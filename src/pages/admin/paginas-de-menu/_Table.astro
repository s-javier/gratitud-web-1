---
import { asc, eq } from 'drizzle-orm'

import { Api, Error } from '~/enums'
import type { CustomError } from '~/types'
import db from '~/db'
import { menuPageTable, permissionTable } from '~/db/schema'
import { handleErrorFromServer } from '~/utils'
import { verifyPermission } from '~/utils/verify-permission'
import DataTable from './_Table'

let data: { pages: any[]; permissions: any[] } = { pages: [], permissions: [] }
let error: CustomError = null
if (Astro.locals.userTokenError) {
  error = handleErrorFromServer(Astro.locals.userTokenError)
} else {
  const permissionVerification = await verifyPermission(Astro.locals.roleId, Api.MENU_PAGE_ALL)
  if (!permissionVerification.isSuccess) {
    error = handleErrorFromServer(permissionVerification.error)
  } else {
    try {
      data.pages = await db
        .select({
          id: menuPageTable.id,
          title: menuPageTable.title,
          sort: menuPageTable.sort,
          icon: menuPageTable.icon,
          permissionId: menuPageTable.permissionId,
          path: permissionTable.path,
        })
        .from(menuPageTable)
        .innerJoin(permissionTable, eq(menuPageTable.permissionId, permissionTable.id))
        .orderBy(asc(menuPageTable.sort))
    } catch {
      error = handleErrorFromServer(Error.DB)
    }
    try {
      data.permissions = await db
        .select({
          id: permissionTable.id,
          path: permissionTable.path,
        })
        .from(permissionTable)
    } catch {
      error = handleErrorFromServer(Error.DB)
    }
  }
}
---

<DataTable client:only="solid-js" data={data} error={error} />
